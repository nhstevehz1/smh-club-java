plugins {
	// spring boot and dependency management convention
	id 'build-logic.spring-boot-conventions'
}

group = 'com.smh'
version = '0.0.1-SNAPSHOT'


dependencies {

	implementation(project(':club-shared'))
	implementation(project(':club-data'))

	// Dependency versions managed by spring dependency management plug in
	// See build-source module
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql' // for production
	runtimeOnly 'com.h2database:h2' // for development
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Dependencies managed by a catalog
	// located at ./gradle/libs.versions.toml
	implementation libs.com.model.mapper.model.mapper

	testImplementation libs.io.zonky.spring.test
	testImplementation libs.io.zonkey.embeded.postgres
	testImplementation libs.org.instanctio.junit5
	testImplementation libs.io.rest.assured.spring.mock.mvc
	testImplementation enforcedPlatform(libs.io.zonky.test.posgres.binaries17)

	mockitoAgent('org.mockito:mockito-core') { transitive = false}
}

tasks {
	test {
		jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}" // need double quotes here
	}
}
