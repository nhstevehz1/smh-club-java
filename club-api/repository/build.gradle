plugins {
  id 'build-logic.spring-boot-conventions'
}

group = 'com.smh.club'
version = '0.0.1-SNAPSHOT'

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'org.postgresql:postgresql' // database for production
  runtimeOnly 'com.h2database:h2' // database for development

  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'

  testAnnotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  implementation libs.com.model.mapper.model.mapper

  testImplementation libs.io.zonky.spring.test
  testImplementation libs.io.zonkey.embeded.postgres
  testImplementation libs.org.instanctio.junit5
  testImplementation enforcedPlatform(libs.io.zonky.test.posgres.binaries17)

  mockitoAgent('org.mockito:mockito-core') { transitive = false}
}

tasks {
  test {
    jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}" // need double quotes here
  }
}
